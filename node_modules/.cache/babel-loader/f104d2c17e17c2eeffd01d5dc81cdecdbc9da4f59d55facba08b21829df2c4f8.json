{"ast":null,"code":"var _jsxFileName = \"/home/gaurav/Videos/React-Project/my-app/src/TodoList.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TodoList = () => {\n  _s();\n  const [tasks, setTasks] = useState([]);\n  const [newTask, setNewTask] = useState('');\n  const handleChange = event => {\n    setNewTask(event.target.value);\n  };\n  const handleSubmit = event => {\n    event.preventDefault();\n    if (newTask.trim() !== '') {\n      setTasks([...tasks, {\n        id: Date.now(),\n        text: newTask,\n        completed: false\n      }]);\n      setNewTask('');\n    }\n  };\n  const toggleTaskCompletion = taskId => {\n    setTasks(tasks.map(task => task.id === taskId ? {\n      ...task,\n      completed: !task.completed\n    } : task));\n  };\n  const deleteTask = taskId => {\n    setTasks(tasks.filter(task => task.id !== taskId));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Todo List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Add a new task\",\n        value: newTask,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Add Task\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: tasks.map(task => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          checked: task.completed,\n          onChange: () => toggleTaskCompletion(task.id)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            textDecoration: task.completed ? 'line-through' : 'none'\n          },\n          children: task.text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => deleteTask(task.id),\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 13\n        }, this)]\n      }, task.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n_s(TodoList, \"MMRu7H+sKP7rEuK8M8zT6HaT89w=\");\n_c = TodoList;\nexport default TodoList;\nvar _c;\n$RefreshReg$(_c, \"TodoList\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","TodoList","_s","tasks","setTasks","newTask","setNewTask","handleChange","event","target","value","handleSubmit","preventDefault","trim","id","Date","now","text","completed","toggleTaskCompletion","taskId","map","task","deleteTask","filter","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","placeholder","onChange","checked","style","textDecoration","onClick","_c","$RefreshReg$"],"sources":["/home/gaurav/Videos/React-Project/my-app/src/TodoList.js"],"sourcesContent":["import React, { useState } from 'react';\n\nconst TodoList = () => {\n  const [tasks, setTasks] = useState([]);\n  const [newTask, setNewTask] = useState('');\n\n  const handleChange = (event) => {\n    setNewTask(event.target.value);\n  };\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    if (newTask.trim() !== '') {\n      setTasks([...tasks, { id: Date.now(), text: newTask, completed: false }]);\n      setNewTask('');\n    }\n  };\n\n  const toggleTaskCompletion = (taskId) => {\n    setTasks(\n      tasks.map((task) =>\n        task.id === taskId ? { ...task, completed: !task.completed } : task\n      )\n    );\n  };\n\n  const deleteTask = (taskId) => {\n    setTasks(tasks.filter((task) => task.id !== taskId));\n  };\n\n  return (\n    <div>\n      <h2>Todo List</h2>\n      <form onSubmit={handleSubmit}>\n        <input\n          type=\"text\"\n          placeholder=\"Add a new task\"\n          value={newTask}\n          onChange={handleChange}\n        />\n        <button type=\"submit\">Add Task</button>\n      </form>\n      <ul>\n        {tasks.map((task) => (\n          <li key={task.id}>\n            <input\n              type=\"checkbox\"\n              checked={task.completed}\n              onChange={() => toggleTaskCompletion(task.id)}\n            />\n            <span style={{ textDecoration: task.completed ? 'line-through' : 'none' }}>\n              {task.text}\n            </span>\n            <button onClick={() => deleteTask(task.id)}>Delete</button>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default TodoList;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}